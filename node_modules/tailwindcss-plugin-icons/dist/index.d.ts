import * as tailwindcss_types_config from 'tailwindcss/types/config'
import { CSSRuleObject, PluginAPI } from 'tailwindcss/types/config'

declare const SCALE: unique symbol
interface CSSRuleObjectWithMaybeScale extends CSSRuleObject {
  [SCALE]?: number
}

declare const Icons: {
  (options: Options): {
    handler: tailwindcss_types_config.PluginCreator
    config?: Partial<tailwindcss_types_config.Config> | undefined
  }
  __isOptionsFunction: true
}
type ScaleFactory = (iconName: string) => number
type IconSetOptions = {
  /**
   * An object describing the selected icons with optional default CSS.
   */
  icons?: Record<string, CSSRuleObjectWithMaybeScale>
  /**
   * A default scale used for all selected icons.
   * @default 1
   */
  scale?: number | ScaleFactory
  /**
   * The location of the icon source in Iconify JSON format. Can be any URI, local path, or module name.
   * @default "@iconify/json" or "@iconify-json/[name]"
   */
  location?: string
  /**
   * Choose to include every icon in the icon set.
   * @default false
   */
  includeAll?: boolean
}
type IconSetOptionsRecord = Record<string, IconSetOptions>
type Options = (pluginApi: PluginAPI) => IconSetOptionsRecord

export {
  IconSetOptions,
  IconSetOptionsRecord,
  Icons,
  Options,
  SCALE,
  ScaleFactory
}
